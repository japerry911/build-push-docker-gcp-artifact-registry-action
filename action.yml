name: build-push-docker-gcp-artifact-registry-action
description: Build and push a Docker image to Google Cloud Artifact Registry

inputs:

  dockerfile_path:
    description: "Path to the Dockerfile."
    required: true
    default: "Dockerfile"

  docker_target:
    description: "Docker target stage."
    required: true

  tags:
    description: "Docker image tags"
    required: true
  
  build_args:
    description: "Key-value pairs that will be exported in docker build-args command."
    required: false
    default: ""

  gcp_credentials_json:
    description: "Google Cloud Service Account JSON, it is recommended to feed this with a GitHub secret value."
    required: false
    default: ""

  workload_identity_provider:
    description: "Workload Identity Provider"
    required: false
    default: ""

  service_account:
    description: "Service Account"
    required: false
    default: ""

  enable_cache:
    description: 'Enable Docker build caching'
    required: false
    default: 'true' 

runs:
  using: composite
  permissions:
    contents: read
    id-token: write
  steps:
    - name: Authenticate to Google Cloud using Workload Identity
      if: ${{ inputs.gcp_credentials_json == '' }}
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
    
    - name: Configure Docker to use gcloud as credential helper
      if: ${{ inputs.gcp_credentials_json == '' }}
      shell: bash
      run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
    
    - name: Login to Artifact Registry with JSON key
      if: ${{ inputs.gcp_credentials_json != '' }}
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: _json_key
        password: ${{ inputs.gcp_credentials_json }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile_path }}
        target: ${{ inputs.docker_target }}
        push: true
        build-args: ${{ inputs.build_args }}
        cache-from: ${{ inputs.enable_cache == 'true' && 'type=gha' || '' }}
        cache-to: ${{ inputs.enable_cache == 'true' && 'type=gha,mode=max' || '' }}
        tags: ${{ inputs.tags }}
